{"version":3,"sources":["components/NewTaskForm.js","components/Task.js","components/TaskList.js","components/TaskFilter.js","components/Footer.js","components/App.js","index.js"],"names":["Input","type","className","placeholder","autoFocus","defaultValue","NewTaskForm","Task","state","completed","editing","onToggleClick","setState","onIconEditClick","label","this","props","classNames","defaultvalue","onClick","formatDistanceToNow","Date","addSuffix","includeSeconds","Component","TaskList","todoData","id","elements","map","item","itemProps","TaskFilter","selected","onFilterClick","Footer","elementFilter","Form","filterElem","ReactDOM","render","document","getElementById","App"],"mappings":"4LAEMA,EAAQ,WACV,OACI,uBAAOC,KAAK,OAAOC,UAAU,WAAWC,YAAY,yBAAyBC,WAAW,EACjFC,aAAa,MAWbC,EARK,WAChB,OACI,yBAAQJ,UAAU,SAAlB,UACI,uCACA,cAAC,EAAD,Q,sCCRSK,E,4MACrBC,MAAQ,CACJC,WAAW,EACXC,SAAS,G,EAETC,cAAgB,WACZ,EAAKC,UAAS,YACV,MAAO,CACHH,WAFuB,EAAfA,e,EAMpBI,gBAAkB,WACd,EAAKD,UAAS,YACV,MAAO,CACHF,SAFqB,EAAbA,a,4CAMpB,WACI,IAAOI,EAASC,KAAKC,MAAdF,MACP,EAA6BC,KAAKP,MAA3BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,QAClB,OAAQA,EAAY,oBAAIR,UAAWe,IAAW,CAACP,YAA3B,SAChB,uBAAOT,KAAK,OAAOC,UAAU,OAAOgB,aAAa,GAAGf,YAAa,mBAEjE,oBAAID,UAAWe,IAAW,CAACR,cAA3B,SACA,sBAAKP,UAAU,OAAf,UACI,uBAAOA,UAAU,SAASD,KAAK,WAAWkB,QAASJ,KAAKJ,gBACxD,kCACI,sBAAMT,UAAU,cAAhB,SAA+BY,IAC/B,uBAAMZ,UAAU,UAAhB,qBAAmCkB,YAAoB,IAAIC,KAAQ,CAC/DC,WAAW,EACXC,gBAAgB,UAGxB,wBAAQrB,UAAU,iBAAiBiB,QAASJ,KAAKF,kBACjD,wBAAQX,UAAU,+B,GApCAsB,a,SCFbC,E,4MACjBjB,MAAQ,CACJkB,SAAU,CACN,CAACZ,MAAO,iBAAkBa,GAAI,GAC9B,CAACb,MAAO,eAAgBa,GAAI,GAC5B,CAACb,MAAO,cAAea,GAAI,K,4CAGnC,WACG,IACOC,EADYb,KAAKP,MAAjBkB,SACoBG,KAAI,SAACC,GAC3B,IAAOH,EAAmBG,EAAnBH,GAAMI,EAAb,YAA0BD,EAA1B,GAEA,OACA,+BACK,cAAC,EAAD,eAAUC,KADJJ,MAKf,OACI,oBAAIzB,UAAU,YAAd,SACK0B,Q,GArBqBJ,aCCjBQ,E,4MACjBxB,MAAQ,CACJyB,UAAU,G,EAEdC,cAAgB,WACZ,EAAKtB,UAAS,YACV,MAAO,CACHqB,UAFqB,EAAbA,c,4CAMpB,WACI,IAAOnB,EAASC,KAAKC,MAAdF,MACAmB,EAAYlB,KAAKP,MAAjByB,SACP,OACI,wBAAQ/B,UAAWe,IAAW,CAACgB,aAAYd,QAASJ,KAAKmB,cAAzD,SAAyEpB,Q,GAf7CU,a,SCAnBW,E,4JACjB,WACI,IACMC,EADarB,KAAKC,MAAjBY,SACwBC,KAAI,SAACC,GAChC,IAAOH,EAAoBG,EAApBH,GAAOI,EAAd,YAA2BD,EAA3B,GACA,OACI,6BACI,cAAC,EAAD,eAAgBC,KADXJ,MAKjB,OACI,yBAAQzB,UAAU,SAAlB,UACI,sBAAMA,UAAU,aAAhB,0BACA,oBAAIA,UAAU,UAAd,SACKkC,IAEL,wBAAQlC,UAAU,kBAAlB,oC,GAjBoBsB,aCG9Ba,E,4MACF7B,MAAQ,CACJ8B,WAAa,CACT,CAACxB,MAAO,MAAOa,GAAI,GACnB,CAACb,MAAO,SAAUa,GAAI,GACtB,CAACb,MAAO,YAAaa,GAAI,K,4CAGjC,WACI,IAAQW,EAAcvB,KAAKP,MAAnB8B,WACJ,OACI,iCACR,cAAC,EAAD,IACA,0BAASpC,UAAU,OAAnB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ0B,SAAUU,c,GAfXd,cAsBN,WACRe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,aC3BtDC,K","file":"static/js/main.baeba5d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = () => {\r\n    return (\r\n        <input type='text' className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus={true}\r\n               defaultValue=''/>\r\n    )\r\n}\r\nconst NewTaskForm = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>todos</h1>\r\n            <Input/>\r\n        </header>\r\n    )\r\n}\r\nexport default NewTaskForm;\r\n\r\n\t","import React, {Component} from 'react';\r\nimport {formatDistanceToNow} from 'date-fns';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class Task extends Component {\r\nstate = {\r\n    completed: false,\r\n    editing: false\r\n}\r\n    onToggleClick = () => {\r\n        this.setState(({completed}) => {\r\n            return {\r\n                completed: !completed\r\n            };\r\n        });\r\n    };\r\n    onIconEditClick = () => {\r\n        this.setState(({editing}) => {\r\n            return {\r\n                editing: !editing\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        const {label} = this.props;\r\n        const {completed, editing} = this.state;\r\n        return (editing) ? (<li className={classNames({editing})}>\r\n            <input type=\"text\" className=\"edit\" defaultvalue=\"\" placeholder={\"Editing task\"}/>\r\n        </li>) : (\r\n            <li className={classNames({completed})}>\r\n            <div className=\"view\">\r\n                <input className=\"toggle\" type=\"checkbox\" onClick={this.onToggleClick}/>\r\n                <label>\r\n                    <span className=\"description\">{label}</span>\r\n                    <span className=\"created\">created {formatDistanceToNow(new Date(), {\r\n                        addSuffix: true,\r\n                        includeSeconds: true\r\n                    })}</span>\r\n                </label>\r\n                <button className=\"icon icon-edit\" onClick={this.onIconEditClick}/>\r\n                <button className=\"icon icon-destroy\"/>\r\n            </div>\r\n                </li>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Task from \"./Task\";\r\nexport default class TaskList extends Component {\r\n    state = {\r\n        todoData: [\r\n            {label: 'Completed task', id: 1},\r\n            {label: 'Editing task', id: 2},\r\n            {label: 'Active task', id: 3},\r\n        ],\r\n    }\r\n    render() {\r\n       const {todoData} = this.state;\r\n        const elements = todoData.map((item) => {\r\n            const {id,...itemProps} = item;\r\n\r\n            return (\r\n            <span key={id}>\r\n                 <Task {...itemProps} />\r\n            </span>\r\n                    );\r\n        });\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {elements}\r\n            </ul>);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class TaskFilter extends Component {\r\n    state = {\r\n        selected: false\r\n    };\r\n    onFilterClick = () => {\r\n        this.setState(({selected})=> {\r\n            return {\r\n                selected: !selected\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        const {label} = this.props;\r\n       const  {selected} = this.state;\r\n        return (\r\n            <button className={classNames({selected})} onClick={this.onFilterClick}>{label}</button>\r\n        );\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        const {elements} = this.props;\r\n        const elementFilter = elements.map((item) => {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id}>\r\n                    <TaskFilter {...itemProps}  />\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <footer className=\"footer\">\r\n                <span className=\"todo-count\">1 items left</span>\r\n                <ul className=\"filters\">\r\n                    {elementFilter}\r\n                </ul>\r\n                <button className=\"clear-completed\">Clear completed</button>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NewTaskForm from \"./NewTaskForm\";\r\nimport TaskList from \"./TaskList\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        filterElem : [\r\n            {label: 'All', id: 1},\r\n            {label: 'Active', id: 2},\r\n            {label: 'Completed', id: 3},\r\n        ],\r\n    }\r\n    render() {\r\n        const { filterElem} = this.state\r\n            return (\r\n                <span>\r\n        <NewTaskForm/>\r\n        <section className='main'>\r\n            <TaskList/>\r\n            <Footer elements={filterElem}/>\r\n        </section>\r\n        </span>\r\n            )\r\n    }\r\n\r\n}\r\n const App = () => {\r\n     ReactDOM.render(<Form/>, document.getElementById('todoapp'));\r\n }\r\nexport default App;","import './style.scss';\r\nimport App from './components/App';\r\nApp();"],"sourceRoot":""}