{"version":3,"sources":["components/NewTaskForm.js","components/Task.js","components/TaskList.js","components/TaskFilter.js","components/Footer.js","components/App.js","index.js"],"names":["Input","type","className","placeholder","autoFocus","defaultValue","NewTaskForm","Task","state","completed","editing","onToggleClick","setState","onIconEditClick","label","this","props","classNames","onClick","formatDistanceToNow","Date","addSuffix","includeSeconds","onDeleted","Component","TaskList","todoData","elements","map","item","id","itemProps","TaskFilter","selected","onFilterClick","Footer","elementFilter","Form","filterElem","deleteItem","idx","findIndex","el","slice","ReactDOM","render","document","getElementById","App"],"mappings":"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","file":"static/js/main.fd9609ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = () => {\r\n    return (\r\n        <input type='text' className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus={true}\r\n               defaultValue=''/>\r\n    );\r\n};\r\nconst NewTaskForm = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>todos</h1>\r\n            <Input/>\r\n        </header>\r\n    );\r\n};\r\nexport default NewTaskForm;\r\n\r\n\t","import React, {Component} from 'react';\r\nimport {formatDistanceToNow} from 'date-fns';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class Task extends Component {\r\n    state = {\r\n        completed: false,\r\n        editing: false\r\n    };\r\n    onToggleClick = () => {\r\n        this.setState(({completed}) => {\r\n            return {\r\n                completed: !completed\r\n            };\r\n        });\r\n    };\r\n    onIconEditClick = () => {\r\n        this.setState(({editing}) => {\r\n            return {\r\n                editing: !editing\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {label} = this.props;\r\n        const {completed, editing} = this.state;\r\n        return (editing) ? (\r\n            <li className={classNames({editing})}>\r\n                <input type=\"text\" className=\"edit\" defaultValue=\"Editing task\"/>\r\n            </li>) : (\r\n            <li className={classNames({completed})}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" onClick={this.onToggleClick}/>\r\n                    <label>\r\n                        <span className=\"description\">{label}</span>\r\n                        <span className=\"created\">created {formatDistanceToNow(new Date(), {\r\n                            addSuffix: true,\r\n                            includeSeconds: true\r\n                        })}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\" onClick={this.onIconEditClick}/>\r\n                    <button className=\"icon icon-destroy\" onClick={this.props.onDeleted}/>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport Task from \"./Task\";\r\n\r\nexport default class TaskList extends Component {\r\n    render() {\r\n        const {todoData, onDeleted} = this.props;\r\n        const elements = todoData.map((item) => {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <span key={id}>\r\n                 <Task {...itemProps}\r\n                       onDeleted={() => onDeleted(id)}\r\n                 />\r\n            </span>\r\n            );\r\n        });\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {elements}\r\n            </ul>);\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class TaskFilter extends Component {\r\n    state = {\r\n        selected: false\r\n    };\r\n    onFilterClick = () => {\r\n        this.setState(({selected})=> {\r\n            return {\r\n                selected: !selected\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        const {label} = this.props;\r\n       const  {selected} = this.state;\r\n        return (\r\n            <button className={classNames({selected})} onClick={this.onFilterClick}>{label}</button>\r\n        );\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        const {elements} = this.props;\r\n        const elementFilter = elements.map((item) => {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id}>\r\n                    <TaskFilter {...itemProps}  />\r\n                </li>\r\n            );\r\n        });\r\n        return (\r\n            <footer className=\"footer\">\r\n                <span className=\"todo-count\">1 items left</span>\r\n                <ul className=\"filters\">\r\n                    {elementFilter}\r\n                </ul>\r\n                <button className=\"clear-completed\">Clear completed</button>\r\n            </footer>\r\n        );\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NewTaskForm from \"./NewTaskForm\";\r\nimport TaskList from \"./TaskList\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        filterElem: [\r\n            {label: 'All', id: 1},\r\n            {label: 'Active', id: 2},\r\n            {label: 'Completed', id: 3},\r\n        ],\r\n        todoData: [\r\n            {label: 'Completed task', id: 1},\r\n            {label: 'Editing task', id: 2},\r\n            {label: 'Active task', id: 3},\r\n        ],\r\n    };\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {todoData, filterElem} = this.state;\r\n        return (\r\n            <span>\r\n        <NewTaskForm/>\r\n        <section className='main'>\r\n            <TaskList todoData={todoData}\r\n                      onDeleted={this.deleteItem}/>\r\n            <Footer elements={filterElem}/>\r\n        </section>\r\n        </span>\r\n        );\r\n    };\r\n}\r\n\r\nconst App = () => {\r\n    ReactDOM.render(<Form/>, document.getElementById('todoapp'))\r\n};\r\nexport default App;","import './style.scss';\r\nimport App from './components/App';\r\nApp();"],"sourceRoot":""}